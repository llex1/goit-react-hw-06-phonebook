{"version":3,"sources":["App/util/globalStateControl.js","App/util/localStorageControl.js","App/components/Alert/Alert.jsx","App/components/Header/Header.jsx","App/components/ContactAdd/ContactAdd.jsx","App/components/ContactShow/ContactShow.jsx","App/components/Filter/Filter.jsx","App/App.jsx","index.js","App/components/ContactAdd/ContactAdd.module.css"],"names":["globalStateControl","marker","id","name","number","this","state","contacts","map","el","includes","setState","alert","alertMessage","clearTimeout","delayToCloseAlert","setTimeout","filter","length","idx","forEach","index","newFilters","splice","newContacts","push","console","log","localStorageControl","boolen","localStorage","getItem","JSON","parse","setItem","stringify","Alert","className","props","text","Component","Header","ContactAdd","valueName","valueNumder","handleChange","event","target","value","handleSubmit","preventDefault","objOut","v4","styles","form","onSubmit","label","htmlFor","required","input","type","placeholder","autoComplete","onChange","pattern","btn","ContactShow","deleteContact","dataset","contactList","globalState","indx","CSSTransition","timeout","classNames","data-id","onClick","children","TransitionGroup","component","Filter","a","App","call","in","unmountOnExit","appear","bind","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.23db57a3.chunk.js","sourcesContent":["const globalStateControl = function({ id, name, number }, marker){\n  switch (marker) {\n    case \"ADD\":\n      if (name && this.state.contacts.map((el) => el.name).includes(name)) {\n        this.setState((state) => {\n          return {\n            alert: true,\n            alertMessage: \"Sorry, but You already have this contact in your base.\",\n          };\n        });\n        clearTimeout(this.delayToCloseAlert);\n        this.delayToCloseAlert = setTimeout(() => {\n          this.setState((state) => {\n            return {\n              alert: false,\n              alertMessage: \"\",\n            };\n          })\n        }, 3000);\n      } else if (name) {\n        this.setState((state) => {\n          return {\n            contacts: [...state.contacts, { id, name, number }],\n          };\n        });\n      }\n      break;\n    case \"DELETE\":\n      if (this.state.filter.length) {\n        let idx = 0;\n        this.state.filter.forEach((el, index) => {\n          if (el.id === id) {\n            idx = index;\n          }\n        });\n        const newFilters = [...this.state.filter];\n        newFilters.splice(idx, 1);\n        this.setState((state) => {\n          return {\n            filter: [...newFilters],\n          };\n        });\n      }\n      let idx = 0;\n      this.state.contacts.forEach((el, index) => {\n        if (el.id === id) {\n          idx = index;\n        }\n      });\n      const newContacts = [...this.state.contacts];\n      newContacts.splice(idx, 1);\n      this.setState((state) => {\n        return {\n          contacts: [...newContacts],\n        };\n      });\n      break;\n    case \"FILTER\":\n      const filter = [];\n      if (name) {\n        this.state.contacts.forEach((el) => {\n          if (el.name.includes(name)) {\n            filter.push(el);\n          }\n          return {\n            filter,\n          };\n        });\n        this.setState((state) => {\n          return {\n            filter: [...filter],\n          };\n        });\n      } else {\n        this.setState((state) => {\n          return {\n            filter: [...filter],\n          };\n        });\n      }\n      break;\n    default:\n      console.log(\"can't parth marker\");\n  }\n};\n\n\nexport default globalStateControl;","const localStorageControl = function(boolen) {\n  console.log(boolen, 'boolens');\n  console.log(this.state.contacts, 'THISSTATE');\n  if(!boolen && localStorage.getItem('contacts')){\n    this.setState((state) => {\n      return {\n        contacts: [...JSON.parse(localStorage.getItem('contacts'))],\n      };\n    });\n  }\n  if(boolen){\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n\n}\n\nexport default localStorageControl;\n\n\n","import React, { Component } from \"react\";\n\nimport \"./Alert.css\";\n\nclass Alert extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"alert\">\n        <p className=\"alert-text\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nexport default Alert;\n","import React, { Component } from 'react';\n\nimport './Header.css';\n\nclass Header extends Component {\n  state = {  }\n  render() { \n    return ( \n        <header className=\"header\">\n          <p>Phonebook</p>\n        </header>\n     );\n  }\n}\n \nexport default Header;","import React, { Component } from \"react\";\nimport { v4 } from 'uuid';\nimport styles from './ContactAdd.module.css'\n\nclass ContactAdd extends Component {\n  state = {\n    valueName: \"\",\n    valueNumder: \"\",\n  };\n  handleChange = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        this.setState((state) => {\n          return {\n            valueName: event.target.value,\n          };\n        });\n        break;\n      case \"number\":\n        this.setState((state) => {\n          return {\n            valueNumder: event.target.value,\n          };\n        });\n        break;\n      default:\n        console.log(\"error form-name\");\n    }\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const objOut = \n      {\n        id: v4(),\n        name: this.state.valueName,\n        number: this.state.valueNumder,\n      };\n    this.props.globalStateControl(objOut, \"ADD\");\n    this.setState((state) => {\n      return {\n        valueName: \"\",\n        valueNumder: \"\",\n      };\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor=\"name\">Contact Name</label>\n        <input\n          required\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder='name'\n          autoComplete = \"off\"\n          value={this.state.valueName}\n          onChange={this.handleChange}\n        />\n        <label className={styles.label} htmlFor=\"number\">Contact Number</label>\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          placeholder='063-333-4444'\n          autoComplete = \"off\"\n          pattern=\"[0-9\\W]*\"\n          value={this.state.valueNumder}\n          onChange={this.handleChange}\n        />\n        <button className={styles.btn} type=\"submit\">new contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactAdd;\n","import React, { Component } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport \"./ContactShow.css\";\n\nclass ContactShow extends Component {\n  state = {};\n\n  deleteContact = (event) => {\n    const id = event.target.dataset.id;\n    this.props.globalStateControl({ id: id }, \"DELETE\");\n  };\n\n  componentDidUpdate() {\n    this.contactList();\n  }\n\n  contactList = () => {\n    let show = null;\n    if (this.props.globalState.filter.length) {\n      show = this.props.globalState.filter;\n    } else {\n      show = this.props.globalState.contacts;\n    }\n    return show.map((el, indx) => {\n      return (\n        <CSSTransition key={indx} timeout={250} classNames=\"contact-show-list-item\">\n        <li key={el.id} className=\"contact-show-list-item\">\n          <p className=\"contact-show-list-text\">\n            <span>{el.name}</span>\n            <span>{el.number}</span>\n          </p>\n          <button data-id={el.id} onClick={this.deleteContact}>\n            delete\n          </button>\n        </li>\n        </CSSTransition>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"contact-show\">\n        {this.props.children}\n        <TransitionGroup component=\"ul\" className=\".contact-show-list\">\n          {this.contactList()}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default ContactShow;\n","import React, { Component } from \"react\";\n\nimport \"./Filter.css\";\n\nclass Filter extends Component {\n  state = {\n    value: \"\",\n  };\n\n  handleChange = async (event) => {\n    await this.setState((state) => {\n      return {\n        value: event.target.value,\n      };\n    })\n    this.props.globalStateControl({ name: this.state.value }, \"FILTER\");\n  };\n\n  render() {\n    return (\n      <div className=\"filter\">\n        <label htmlFor=\"filter\">Filter</label>\n        <input\n          id=\"filter\"\n          type=\"text\"\n          name=\"filter\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\n//js util\nimport globalStateControl from './util/globalStateControl';\nimport localStorageControl from './util/localStorageControl';\n\n//jsx module\nimport Alert from \"./components/Alert\";\nimport Header from \"./components/Header\";\nimport ContactAdd from \"./components/ContactAdd\";\nimport ContactShow from \"./components/ContactShow\";\nimport Filter from \"./components/Filter\";\n\n//style\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    alert: false,\n    alertMessage: \"\",\n  };\n  \n  delayToCloseAlert = null;\n  \n  componentDidMount(){\n    localStorageControl.call(this)\n  }\n  componentDidUpdate(){\n    localStorageControl.call(this, true)\n  }\n\n  render() {\n    return (\n      <div className=\"phonebook\">\n        <CSSTransition\n          in={this.state.alert}\n          classNames=\"alert\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Alert text={this.state.alertMessage} />\n        </CSSTransition>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"header\"\n          timeout={500}\n          unmountOnExit\n        >\n          <Header />\n        </CSSTransition>\n        <ContactAdd globalStateControl={globalStateControl.bind(this)} />\n        <ContactShow\n          globalStateControl={globalStateControl.bind(this)}\n          globalState={this.state}\n        >\n          <CSSTransition\n            in={this.state.contacts.length > 1}\n            classNames=\"filter\"\n            timeout={250}\n            unmountOnExit\n          >\n            <Filter globalStateControl={globalStateControl.bind(this)} />\n          </CSSTransition>\n        </ContactShow>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAdd_form__NRizT\",\"label\":\"ContactAdd_label__3aJLR\",\"input\":\"ContactAdd_input__1Fx51\",\"btn\":\"ContactAdd_btn__1U505\"};"],"sourceRoot":""}